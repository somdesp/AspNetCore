{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/loja/listaProduto.component.html","webpack:///./ClientApp/app/loja/listaProduto.component.ts","webpack:///./ClientApp/app/services/dataService.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kF;;;;;;;;;;;ACZA,+JAA+J,OAAO,4E;;;;;;;;;;;;;;;;;ACA5H;AAO1C;IALA;QAME,UAAK,GAAG,eAAe,CAAC;IAC1B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,+FAAmC;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACzC,yDAAyD;AACf;AAEK;AACA;AACa;AACR;AAkBpD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdlB,8DAAQ,CAAC;YACL,YAAY,EAAE;gBACV,2DAAY;gBACZ,yEAAY;aACf;YACD,OAAO,EAAE;gBACL,uEAAa;gBACb,4DAAY,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC;gBAChE,wDAAU;aAEb;YACD,SAAS,EAAE,CAAC,iEAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC5B,CAAC;OACO,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1BtB,8GAA8G,QAAQ,+DAA+D,SAAS,6D;;;;;;;;;;;;;;;;;;ACA5I;AACI;AAStD;IAEI,sBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAI9B,aAAQ,GAAG,EAAE,CAAC;QAHjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAClC,CAAC;IAID,+BAAQ,GAAR;QAAA,iBAGC;QAFG,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;aACvB,SAAS,CAAC,cAAK,YAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAlC,CAAkC,CAAC,CAAC;IAC5D,CAAC;IAXQ,YAAY;QALxB,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,sHAA4C;SAE/C,CAAC;+EAG4B,iEAAW;OAF5B,YAAY,CAYxB;IAAD,mBAAC;CAAA;AAZwB;;;;;;;;;;;;;;;;;;;;ACVuB;AAEL;AAEb;AAG9B;IAEI,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAIvB,aAAQ,GAAG,EAAE,CAAC;IAFrB,CAAC;IAID,sCAAgB,GAAhB;QAAA,iBAIC;QAHG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4BAA4B,CAAC;aAC7C,GAAG,CAAC,UAAC,MAAgB,IAAK,YAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,EAAE,EAA7B,CAA6B,CAAC,CAAC;IAElE,CAAC;IAZQ,WAAW;QADvB,gEAAU,EAAE;+EAGiB,kDAAI;OAFrB,WAAW,CAcvB;IAAD,kBAAC;CAAA;AAduB;;;;;;;;;;;;;ACPxB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAKD,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n    <h1>\\r\\n        Welcome to {{title}}!\\r\\n    </h1>\\r\\n    <lista-produto></lista-produto>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent {\n  title = 'Template Novo';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//import { HttpClientModule } from \"@angular/common/http\"\nimport { HttpModule } from \"@angular/http\"\n\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { ListaProduto } from './loja/listaProduto.component'\nimport { DataService } from './services/dataService'\n\n\n@\n    NgModule({\n        declarations: [\n            AppComponent,\n            ListaProduto\n        ],\n        imports: [\n            BrowserModule,\n            RouterModule.forRoot([], { useHash: true, enableTracing: true }),\n            HttpModule\n\n        ],\n        providers: [DataService],\n        bootstrap: [AppComponent]\n    })\nexport class AppModule { }\n","module.exports = \"<div class=\\\"col-xs-9\\\" *ngFor=\\\"let p of produtos\\\">\\r\\n\\r\\n\\r\\n    \\r\\n            <div>{{p.nome}} </div>\\r\\n            <div class=\\\"\\\">\\r\\n                R${{p.preco}}\\r\\n            </div>\\r\\n    \\r\\n    \\r\\n</div>\\r\\n\\r\\n\\r\\n\"","﻿import { Component, OnInit } from \"@angular/core\"\r\nimport { DataService } from \"../services/dataService\";\r\nimport { Produto } from \"../model/produtos\";\r\n\r\n\r\n@Component({\r\n    selector: \"lista-produto\",\r\n    templateUrl: \"./listaProduto.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class ListaProduto implements OnInit {\r\n\r\n    constructor(private data: DataService) {\r\n        this.produtos = data.produtos;\r\n    }\r\n\r\n    public produtos = [];\r\n\r\n    ngOnInit(): void {\r\n        this.data.carregarProdutos()\r\n            .subscribe(()=> this.produtos = this.data.produtos);\r\n    }\r\n} ","﻿import { Http, Response } from \"@angular/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {Produto} from \"../model/produtos\"\r\nimport \"rxjs/add/operator/map\"\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n\r\n    public produtos = [];\r\n\r\n    carregarProdutos() :Observable<Produto[]> {\r\n        return this.http.get(\"api/produto/ListarProdutos\")\r\n            .map((result: Response) => this.produtos = result.json());\r\n\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}